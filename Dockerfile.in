#### This is a Dockerfile for portable building and executing Common Lisp program.
#### This requires some preliminalies to the program which built with this:
####
#### - The program shall be executed as a single executable file
#### - Entry point of the program is written as a roswell script
####     - More details, see [Roswell](https://github.com/roswell/roswell)
####
#### This Dockerfile can mainly used in two cases:
####
#### - To build the executable file
#### - To run the program by **not Common Lisp user**


### Base image for building
#
# If you want to build only once, you should atatch a tag individually like this:
# `$ docker build --target @PACKAGE@-cl-base -t @PACKAGE@-cl-base .`
FROM ubuntu:18.04 as @PACKAGE@-cl-base

# Builder requires some dependent not-Common-Lisp library, because of `ql:quickload`.
RUN apt-get update \
    && apt-get install -y libev-dev build-essential libcurl4-gnutls-dev autoconf libncurses5-dev git sudo \
    && rm -rf /var/lib/apt/lists/*

RUN git clone --depth=1 -b release https://github.com/roswell/roswell.git && \
    cd roswell && \
    sh bootstrap && \
    ./configure --disable-manual-install && \
    make && \
    make install && \
    cd .. && \
    rm -rf roswell

RUN useradd -ms /bin/bash lisp && sudo usermod -aG sudo lisp
RUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers

USER lisp
WORKDIR /home/lisp

## roswell has bug here
RUN env \
    && (ros || ros) \
    && ros install qlot

### Execution environment
#
# If you want to build only once, do this:
# `$ docker build --target @PACKAGE@-runner -t @PACKAGE@-runner .`
FROM ubuntu:18.04 as @PACKAGE@-runner

RUN apt-get update \
    && apt-get install -y libev-dev libcurl4-gnutls-dev autoconf git \
    && rm -rf /var/lib/apt/lists/*

### Dependency installed environment (to reduce build speed)
#
# If you want to build only once, do this:
# `$ docker build --target @PACKAGE@-deps -t @PACKAGE@-deps .`
FROM @PACKAGE@-cl-base as @PACKAGE@-deps

COPY ./qlfile /app/
COPY ./qlfile.lock /app/
RUN sudo chown -R lisp:lisp /app && cd /app && $HOME/.roswell/bin/qlot install

### Build environment
FROM @PACKAGE@-deps as @PACKAGE@-builder

COPY ./ /app/
RUN cd /app && $HOME/.roswell/bin/qlot exec make build

### Execution environment
#
# You can use this container to run the program or copy executable file built
FROM @PACKAGE@-runner

COPY --from=@PACKAGE@-builder /app/runtime /usr/bin/@PACKAGE@
CMD [ "/usr/bin/@PACKAGE@", "version" ]
EXPOSE 5000
